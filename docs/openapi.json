{
  "openapi": "3.0.1",
  "info": {
    "title": "Excel Importer REST API",
    "version": "v1"
  },
  "paths": {
    "/api/context": {
      "get": {
        "operationId": "getContext",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Context"
                }
              }
            },
            "description": "Context information"
          }
        },
        "summary": "Returns basic context information of Polarion's extension",
        "tags": [
          "Extension Information"
        ]
      }
    },
    "/api/exportHtmlTable": {
      "post": {
        "operationId": "exportHtmlTable",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "sheetName": {
                    "type": "string"
                  },
                  "tableHtml": {
                    "format": "byte",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportHtmlTableResult"
                }
              }
            },
            "description": "Successful export"
          }
        },
        "summary": "Export html table as excel sheet",
        "tags": [
          "Excel Processing"
        ]
      }
    },
    "/api/projects/{projectId}/import": {
      "post": {
        "operationId": "importExcelSheet",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "format": "binary",
                    "type": "string"
                  },
                  "mappingName": {
                    "default": "Default",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportResult"
                }
              }
            },
            "description": "Successful import"
          }
        },
        "summary": "Imports Excel sheet",
        "tags": [
          "Excel Processing"
        ]
      }
    },
    "/api/projects/{projectId}/workitem_types": {
      "get": {
        "operationId": "getWorkItemTypes",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ITypeOpt"
                }
              }
            },
            "description": "Successfully retrieved work item types"
          }
        },
        "summary": "Get workitem types for project",
        "tags": [
          "WorkItems"
        ]
      }
    },
    "/api/projects/{projectId}/workitem_types/{workItemType}/fields": {
      "get": {
        "operationId": "getWorkItemFields",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workItemType",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldMetadata"
                }
              }
            },
            "description": "Successfully retrieved fields"
          }
        },
        "summary": "Get all fields for requested project and workitem type",
        "tags": [
          "WorkItems"
        ]
      }
    },
    "/api/settings": {
      "get": {
        "operationId": "readFeaturesList_1",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "List of supported features"
          }
        },
        "summary": "Returns the complete list of all supported features",
        "tags": [
          "Settings"
        ]
      }
    },
    "/api/settings/{feature}/default-content": {
      "get": {
        "operationId": "getDefaultValues_1",
        "parameters": [
          {
            "in": "path",
            "name": "feature",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsModel"
                }
              }
            },
            "description": "Default values"
          }
        },
        "summary": "Returns default values of specified setting",
        "tags": [
          "Settings"
        ]
      }
    },
    "/api/settings/{feature}/names": {
      "get": {
        "operationId": "readSettingNames_1",
        "parameters": [
          {
            "in": "path",
            "name": "feature",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingName"
                }
              }
            },
            "description": "List of setting names"
          }
        },
        "summary": "Returns names of specified setting",
        "tags": [
          "Settings"
        ]
      }
    },
    "/api/settings/{feature}/names/{name}": {
      "delete": {
        "operationId": "deleteSetting_1",
        "parameters": [
          {
            "in": "path",
            "name": "feature",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Setting deleted successfully"
          }
        },
        "summary": "Deletes specified setting by id",
        "tags": [
          "Settings"
        ]
      },
      "post": {
        "operationId": "renameSetting_1",
        "parameters": [
          {
            "in": "path",
            "name": "feature",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Setting name updated successfully"
          }
        },
        "summary": "Updates name of specified named setting",
        "tags": [
          "Settings"
        ]
      }
    },
    "/api/settings/{feature}/names/{name}/content": {
      "get": {
        "operationId": "readSetting_1",
        "parameters": [
          {
            "in": "path",
            "name": "feature",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "revision",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsModel"
                }
              }
            },
            "description": "Setting content"
          }
        },
        "summary": "Returns values (content) of specified setting by its id and revision",
        "tags": [
          "Settings"
        ]
      },
      "put": {
        "operationId": "saveSetting_1",
        "parameters": [
          {
            "in": "path",
            "name": "feature",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Setting created/updated successfully"
          }
        },
        "summary": "Creates or updates named setting. Creation scenario will use default setting value if no body specified in the request.",
        "tags": [
          "Settings"
        ]
      }
    },
    "/api/settings/{feature}/names/{name}/revisions": {
      "get": {
        "operationId": "readRevisionsList_1",
        "parameters": [
          {
            "in": "path",
            "name": "feature",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Revision"
                }
              }
            },
            "description": "List of revisions"
          }
        },
        "summary": "Returns revisions history of specified setting with specified id",
        "tags": [
          "Settings"
        ]
      }
    },
    "/api/version": {
      "get": {
        "operationId": "getVersion",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Version"
                }
              }
            },
            "description": "Version information"
          }
        },
        "summary": "Returns version of Polarion's extension",
        "tags": [
          "Extension Information"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Context": {
        "description": "Represents the context for building URLs related to Polarion services",
        "properties": {
          "baseUrl": {
            "description": "Returns the base URL constructed with the extension context",
            "type": "string"
          },
          "extensionContext": {
            "description": "The extension context used as a base for URL construction",
            "type": "string"
          },
          "restUrl": {
            "description": "Returns the REST API URL constructed with the extension context",
            "type": "string"
          },
          "swaggerUiUrl": {
            "description": "Returns the Swagger UI URL for the REST API",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExportHtmlTableResult": {
        "description": "Represents the result of a html table export operation",
        "properties": {
          "content": {
            "description": "Base64-encoded excel file content",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FieldMetadata": {
        "properties": {
          "custom": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "multi": {
            "type": "boolean"
          },
          "options": {
            "items": {
              "$ref": "#/components/schemas/Option"
            },
            "type": "array",
            "uniqueItems": true
          },
          "required": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/IType"
          }
        },
        "type": "object"
      },
      "IType": {
        "type": "object"
      },
      "ITypeOpt": {
        "properties": {
          "default": {
            "type": "boolean"
          },
          "enumId": {
            "type": "string"
          },
          "hidden": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "phantom": {
            "type": "boolean"
          },
          "properties": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "sequenceNumber": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ImportResult": {
        "description": "Represents the result of an Excel import operation",
        "properties": {
          "createdIds": {
            "description": "List of IDs that were created during the import process",
            "items": {
              "description": "List of IDs that were created during the import process",
              "type": "string"
            },
            "type": "array"
          },
          "log": {
            "description": "Text log generated during import process",
            "type": "string"
          },
          "skippedIds": {
            "description": "List of IDs that were skipped during the import process",
            "items": {
              "description": "List of IDs that were skipped during the import process",
              "type": "string"
            },
            "type": "array"
          },
          "unchangedIds": {
            "description": "List of IDs that were unchanged during the import process",
            "items": {
              "description": "List of IDs that were unchanged during the import process",
              "type": "string"
            },
            "type": "array"
          },
          "updatedIds": {
            "description": "List of IDs that were updated during the import process",
            "items": {
              "description": "List of IDs that were updated during the import process",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Option": {
        "properties": {
          "iconUrl": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Revision": {
        "description": "Revision details",
        "properties": {
          "author": {
            "description": "The author of the revision",
            "type": "string"
          },
          "baseline": {
            "description": "The baseline of the revision",
            "type": "string"
          },
          "date": {
            "description": "The date of the revision",
            "type": "string"
          },
          "description": {
            "description": "The description of the revision",
            "type": "string"
          },
          "name": {
            "description": "The name of the revision",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SettingName": {
        "properties": {
          "name": {
            "description": "The name of the setting",
            "type": "string"
          },
          "scope": {
            "description": "The scope of the setting",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SettingsModel": {
        "description": "Settings model",
        "properties": {
          "bundleTimestamp": {
            "description": "The bundle timestamp of the setting",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Version": {
        "description": "Details about the software version",
        "properties": {
          "automaticModuleName": {
            "description": "The automatic module name",
            "type": "string"
          },
          "bundleBuildTimestamp": {
            "description": "The build timestamp of the bundle",
            "type": "string"
          },
          "bundleName": {
            "description": "The name of the bundle",
            "type": "string"
          },
          "bundleVendor": {
            "description": "The vendor of the bundle",
            "type": "string"
          },
          "bundleVersion": {
            "description": "The version of the bundle",
            "type": "string"
          },
          "projectURL": {
            "description": "The project URL",
            "type": "string"
          },
          "supportEmail": {
            "description": "Support email for the bundle",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  }
}
